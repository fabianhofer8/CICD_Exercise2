# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  APP_DB_USERNAME: postgres
  APP_DB_PASSWORD: Eigentor1
  APP_DB_NAME: postgres

jobs:
  

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Docker run Postgre with SSL
      run: |
        docker run --name postgres \
        -p 5432:5432 \
        -e POSTGRES_PASSWORD=${APP_DB_PASSWORD} \
        -e POSTGRES_USER=${APP_DB_USERNAME} \
        -e POSTGRES_DB=${APP_DB_NAME} \
        -v $(pwd)/server.crt:/var/lib/postgresql/server.crt \
        -v $(pwd)/server.key:/var/lib/postgresql/server.key \
        -e POSTGRES_SSL_CERT_FILE=/var/lib/postgresql/server.crt \
        -e POSTGRES_SSL_KEY_FILE=/var/lib/postgresql/server.key \
        -d postgres \
        -c 'ssl=on' \
        -c 'ssl_cert_file=/var/lib/postgresql/server.crt' \
        -c 'ssl_key_file=/var/lib/postgresql/server.key'
    

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...
