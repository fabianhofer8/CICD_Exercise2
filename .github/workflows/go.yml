# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  APP_DB_USERNAME: postgres
  APP_DB_PASSWORD: password
  APP_DB_NAME: postgres

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Docker run Postgre
        run: docker run --name postgres -p 5432:5432 -e POSTGRES_PASSWORD=${APP_DB_PASSWORD} -e POSTGRES_USER=${APP_DB_USERNAME} -e POSTGRES_DB=${APP_DB_NAME} -d postgres

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  docker:
    needs: build
    name: Docker image build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.19'
      
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.sha }} ./

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        continue-on-error: true
        with:
          image-ref: '${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'


      - name: Add Tag to image
        run: docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/myapp:latest ./

      - name: Login to Docker
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push to Docker latest
        run: docker push ${{ secrets.DOCKER_USERNAME }}/myapp:latest

      - name: Push to Docker git sha
        run: docker push ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.sha }}

  Trivy-IaC-Mode:
    needs: build
    name: Trivy in Iac Mode
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner in IaC mode
      uses: aquasecurity/trivy-action@0.20.0
      with:
        scan-type: 'config'
        format: 'sarif'
        output: 'trivy-results.sarif'
        exit-code: '1'
        severity: 'CRITICAL,HIGH'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'


  sonarCloud:
    needs: docker
    name: SonarCloud Scan
    runs-on: ubuntu-latest

    steps:
      - uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.projectKey=fabianhofer8_CICD_Exercise2
            -Dsonar.organization=fabianhofer8
            -Dsonar.sources=.
            -Dsonar.host.url=https://sonarcloud.io
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

